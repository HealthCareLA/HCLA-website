---
import NewEventList from "@components/news_events/list";
import NewEventPagination from "@components/news_events/pagination";
import Layout from "@layouts/Layout.astro";
import { getCollection, getEntryBySlug } from "astro:content";

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const tags: Record<string, any> = {};
  const page = await getEntryBySlug("pages", "news-events");
  const posts = await getCollection("news-events");
  posts.forEach(
    ({ data }) =>
      data.tags && data.tags.forEach((tag: string) => (tags[tag] = true)),
  );

  return Object.keys(tags).map((tag) => {
    const filteredPosts = posts.filter(({ data }) => data.tags?.includes(tag));
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: page.data.page_size,
    });
  });
}

const tag = Astro.params.tag ?? "";
const page = (await getEntryBySlug("pages", "news-events")).data;
page.title = tag[0].toUpperCase() + tag.slice(1);
page.description = "";

const pagination = Astro.props.page;
const filteredPosts = pagination.data;
---

<Layout title={page.title} seo={page.seo}>
  <NewEventList page={page} posts={filteredPosts} />
  <NewEventPagination pagination={pagination} />
</Layout>
