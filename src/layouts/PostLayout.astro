---
import Layout, { SEOProps } from "@layouts/Layout.astro";
import type { MarkdownLayoutProps } from "astro";

type Props =
  | {
      title: string;
      date: string;
      category: string;
      image: string;
      content: string;
    }
  | MarkdownLayoutProps<{
      title: string;
      date: string;
      category: string;
      image: string;
      content: string;
    }>;

const props = Astro.props.frontmatter ?? Astro.props;
interface SingleNews {
  title: string;
  date: string;
  category: string;
  image: string;
  content: string;
}
const content = Astro.props.body ?? Astro.props.rawContent();

const singleNewsData = Astro.props as SingleNews;
---

<Layout {...props}>
  <section class="blog-details">
    <div class="max-container">
      <a
        href="/news-events"
        class="mt-[150px] p2 font-[500] text-blue hover:text-green whitespace-pre-line block"
      >
        <i class="fa-solid fa-circle-chevron-left text-green ml-1"></i> Back to News and Events
      </a>
    </div>

    <article
      class="single-news-item pt-[40px] lg:pt-[60px] pb-[50px] lg:pb-[80px] xl:pb-[120px] max-container"
    >
      <div class="max-w-[775px] mx-auto">
        <div class="text-left mb-[50px]">
          <h1 class="font-medium text-blue h3">{singleNewsData.title}</h1>
          <div
            class="flex align-middle gap-[5px] mt-[20px] mb-[30px] text-common-clr font-normal p2"
          >
            <p>{singleNewsData.category}</p> /
            <p>{singleNewsData.date}</p>
          </div>
          <img
            src={singleNewsData.image}
            alt={singleNewsData.title}
            class="w-full rounded-[18px] h-[300px] md:h-[400px] lg:h-[500px] object-cover"
          />
        </div>
        <div class="content p2 text-common-clr">
          <!-- Render the HTML content directly -->
          <div class="rendered-content" set:html={content} />
        </div>
      </div>
    </article>
  </section>
</Layout>
